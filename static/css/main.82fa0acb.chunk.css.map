{"version":3,"sources":["/home/adri/Desktop/Void/Void-techniques/src/App.scss","/home/adri/Desktop/Void/Void-techniques/src/styles/_mixins.scss","/home/adri/Desktop/Void/Void-techniques/src/styles/_variables.scss","/home/adri/Desktop/Void/Void-techniques/src/components/Title/style.scss","/home/adri/Desktop/Void/Void-techniques/src/components/Container/style.scss","/home/adri/Desktop/Void/Void-techniques/src/components/Cell/style.scss","/home/adri/Desktop/Void/Void-techniques/src/components/Footer/style.scss","/home/adri/Desktop/Void/Void-techniques/src/components/Hexagon/style.scss","/home/adri/Desktop/Void/Void-techniques/src/components/VoidText/style.scss","/home/adri/Desktop/Void/Void-techniques/src/components/Squares/style.scss","/home/adri/Desktop/Void/Void-techniques/src/components/Cube/style.scss","/home/adri/Desktop/Void/Void-techniques/src/components/Circle/style.scss","/home/adri/Desktop/Void/Void-techniques/src/components/Platforms/style.scss"],"names":[],"mappings":"AAGA,MCUE,YAAA,CA2BA,qBAAA,CAwBA,sBAAA,CAkBA,kBAAA,CC3EE,qBAAA,CACA,uBAAA,CACA,qBAAA,CACA,mBAAA,CACA,qEFLU,CAGd,WAHE,WAagB,CAVlB,KACE,QAAA,CACA,SAAA,CACA,8BAAA,CACA,eAAA,CACA,2GAAA,CAAA,sEAAA,CACA,UAAA,CAEA,cAAA,CACA,aAAA,CACA,eAAgB,CGjBlB,OFWE,YAAA,CA2BA,kBAAA,CAwBA,sBAAA,CAkBA,kBAAA,CE9EA,0CAA2C,CAF7C,UFsJE,cAAA,CEvIE,wBAAA,CACA,WAAY,CFhBZ,yCEAJ,UAOM,cAAe,CAPrB,uBFsJE,cAAA,CE3IM,sBAAuB,CAAA,CAX/B,gBFsJE,cAAA,CElII,oBAAA,CACA,cAAe,CCrBrB,WH4HE,YAAA,CACA,0DAAA,CACA,aAAA,CACA,oBAAA,CACA,YAAA,CG7HA,0BAAA,CACA,UAAA,CAEA,eAAgB,CCNlB,iBJ8DE,sBAAA,CGzDA,sBCEe,CAPjB,MJWE,YAAA,CA2BA,qBAAA,CA0CA,kBAAA,CAsEA,cAAA,CInJA,YAAA,CACA,WAAA,CACA,iCAAA,CAEA,cAAe,CAPjB,YJsJE,cAAA,CI3II,gCAAiC,CCXvC,QLWE,YAAA,CA2BA,kBAAA,CAwBA,sBAAA,CAkBA,kBAAA,CK3EE,cAAA,CACA,UAAA,CACA,WAAA,CACA,MAAA,CACA,QAAA,CACA,wBAAA,CACA,2BAAA,CACA,eAAA,CACA,iBAAkB,CLblB,yCKAJ,QAGQ,eAAgB,CAAA,CCHxB,SACE,cAAA,CACA,gBAAA,CACA,uBAAA,CACA,cAAA,CACA,wBAAyB,CAL3B,eN2JE,4CAAA,CAEA,oCMrJ0D,CN4H1D,2BMvHA,GN8JA,uBM7J8C,CAAA,CN+H9C,mBMhIA,GN8JA,uBM7J8C,CAAA,CCdhD,WACI,sBAAA,CP0JF,yEAAA,CAEA,iEO3J0F,CPkI1F,4BO9HE,GACI,SAAU,CAAA,CPsIhB,oBOvIE,GACI,SAAU,CAAA,CCPlB,aAGQ,YAAA,CACA,WAAA,CACA,qBAAsB,CAL9B,mBAQY,6BAA8B,CAR1C,8BAYY,iBAAkB,CCZ9B,gBACE,WAAA,CACA,YAAA,CACA,gBAAA,CACA,iBAAA,CACA,iBAAkB,CALpB,oBTkLE,2BAAA,CSzKE,UAAA,CACA,WAAA,CACA,iBAAkB,CAXtB,2BTsJE,cAAA,CSvIM,iBAAA,CACA,UAAA,CACA,WAAA,CACA,QAAA,CACA,iCAAkC,CAnB1C,6CTsJE,cAAA,CS/HQ,kCAAA,CACA,UAAW,CAxBrB,0BT2KE,0CS9IoE,CA7BtE,sDT2KE,2CStIqE,CArCvE,2BT2KE,yCAAA,CSjIM,kCAAA,CACA,UAAW,CA3CnB,2BT2JE,4CAAA,CAEA,oCS9G8D,CA/ChE,yBT2KE,0CSxHoE,CTiFpE,iCS3EA,GTkHA,wCSjH8D,CAG9D,GT8GA,yCS7GgE,CAAA,CT+EhE,yBSpFA,GTkHA,wCSjH8D,CAG9D,GT8GA,yCS7GgE,CAAA,CC9DlE,eVsJE,eAAA,CUlJM,4BAA6B,CAJrC,qBVsJE,cAAA,CU9IU,uBAAA,CACA,cAAA,CACA,gBAAiB,CCP7B,gBXwJE,4CAAA,CAEA,oCAAA,CWtJM,oBAAA,CACA,aAAc,CAKlB,4BXqJF,0BAAA,CAEA,kBWtJsF,CADpF,4BXqJF,gCAAA,CAEA,wBWtJsF,CADpF,4BXqJF,+BAAA,CAEA,uBWtJsF,CXsHtF,wBWjHE,GAAO,uBAAyB,CAChC,GAAO,4BAA8B,CAAA,CXyHvC,gBW1HE,GAAO,uBAAyB,CAChC,GAAO,4BAA8B,CAAA","file":"main.82fa0acb.chunk.css","sourcesContent":["@import '~styles/variables';\n@import '~styles/mixins';\n\n:root {\n  @include flex-definition(column, center, center);\n  @include colors-vars;\n  height: 100%;\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n  font-family: \"Poppins\", sans-serif;\n  font-weight: 500;\n  background-image: radial-gradient(circle at 62% 44%, var(--color--ramp));\n  width: 100%;\n  height: 100%;\n  font-size: 16px;\n  color: rgb(42, 42, 42);\n  overflow: hidden;\n}\n","@mixin respond-to($media) {\n  @if $media == mobile {\n    @media only screen and (max-width: 415px) {\n      @content;\n    }\n  }\n}\n\n@mixin flex() {\n  display: -webkit-box; \n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex; \n  display: flex;\n}\n\n@mixin direction($value) {\n  @if $value == row-reverse {\n    -webkit-box-direction: reverse;\n    -webkit-box-orient: horizontal;\n    -moz-box-direction: reverse;\n    -moz-box-orient: horizontal;\n  } @else if $value == column {\n    -webkit-box-direction: normal;\n    -webkit-box-orient: vertical;\n    -moz-box-direction: normal;\n    -moz-box-orient: vertical;\n  } @else if $value == column-reverse {\n    -webkit-box-direction: reverse;\n    -webkit-box-orient: vertical;\n    -moz-box-direction: reverse;\n    -moz-box-orient: vertical;\n  } @else {\n    -webkit-box-direction: normal;\n    -webkit-box-orient: horizontal;\n    -moz-box-direction: normal;\n    -moz-box-orient: horizontal;\n  }\n  -webkit-flex-direction: $value;\n  -ms-flex-direction: $value;\n  flex-direction: $value;\n}\n\n@mixin justify($value) {\n  @if $value == flex-start {\n    -webkit-box-pack: start;\n    -moz-box-pack: start;\n    -ms-flex-pack: start;\n  } @else if $value == flex-end {\n    -webkit-box-pack: end;\n    -moz-box-pack: end;\n    -ms-flex-pack: end;\n  } @else if $value == space-between {\n    -webkit-box-pack: justify;\n    -moz-box-pack: justify;\n    -ms-flex-pack: justify;\n  } @else if $value == space-around {\n    -ms-flex-pack: distribute;\n  } @else {\n    -webkit-box-pack: $value;\n    -moz-box-pack: $value;\n    -ms-flex-pack: $value;\n  }\n  -webkit-justify-content: $value;\n  justify-content: $value;\n}\n\n@mixin align-items($value) {\n  @if $value == flex-start {\n    -webkit-box-align: start;\n    -moz-box-align: start;\n    -ms-flex-align: start;\n  } @else if $value == flex-end {\n    -webkit-box-align: end;\n    -moz-box-align: end;\n    -ms-flex-align: end;\n  } @else {\n    -webkit-box-align: $value;\n    -moz-box-align: $value;\n    -ms-flex-align: $value;\n  }\n  -webkit-align-items: $value;\n  align-items: $value;\n}\n\n@mixin align-content($value) {\n  -webkit-align-content: $value;\n  @if $value == flex-start {\n    -ms-flex-line-pack: start;\n  } @else if $value == flex-end {\n    -ms-flex-line-pack: end;\n  } @else {\n    -ms-flex-line-pack: $value;\n  }\n  align-content: $value;\n}\n\n@mixin align-self($value) {\n  -webkit-align-self: $value;\n  @if $value == flex-start {\n    -ms-flex-item-align: start;\n  } @else if $value == flex-end {\n    -ms-flex-item-align: end;\n  } @else {\n    -ms-flex-item-align: $value;\n  }\n  align-self: $value;\n}\n\n@mixin flex-definition($direction, $justify, $align) {\n  @include flex();\n  \n  @if $direction {\n    @include direction($direction);\n  }\n\n  @if $justify {\n    @include justify($justify);\n  }\n\n  @if $align {\n    @include align-items($align);\n  }\n}\n\n@mixin grid-definition($min, $max) {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax($min, $max));\n  grid-gap: 1rem;\n  grid-auto-flow: dense;\n  padding: 5rem;\n}\n\n@mixin keyframes-definition($animationName) {\n  @-webkit-keyframes #{$animationName} {\n      @content;\n  }\n  @-moz-keyframes #{$animationName} {\n      @content;\n  }\n  @-o-keyframes #{$animationName} {\n      @content;\n  }\n  @keyframes #{$animationName} {\n      @content;\n  }\n}\n\n@mixin transition-definition($definition) {\n  -moz-transition: $definition;\n  -webkit-transition: $definition;\n  -o-transition: $definition;\n  transition: $definition;\n}\n\n@mixin animation-definition($definition) {\n  -moz-animation: $definition;\n  -webkit-animation: $definition;\n  -o-animation: $definition;\n  animation: $definition;\n}\n\n@mixin animation-delay-definition($definition) {\n  -moz-animation-delay: $definition;\n  -webkit-animation-delay: $definition;\n  -o-animation-delay: $definition;\n  animation-delay: $definition;\n}\n\n@mixin transform-definition($definition) {\n  -moz-transform: $definition;\n  -webkit-transform: $definition;\n  -o-transform: $definition;\n  transform: $definition;\n}\n\n@mixin transform-style-definition($definition) {\n  -moz-transform-style: $definition;\n  -webkit-transform-style: $definition;\n  -o-transform-style: $definition;\n  transform-style: $definition;\n}\n","$color-primary: #990099;\n$color-secondary: #99ccff;\n$color-font: #404040;\n$color-bg: #1a1a1a;\n$color-ramp: #ffc6c4,#f4a3a8,#e38191,#cc607d,#ad466c,#8b3058,#672044;\n\n@mixin colors-vars {\n    --color--primary: #{$color-primary};\n    --color--secondary: #{$color-secondary};\n    --color--font: #{$color-font};\n    --color--bg: #{$color-bg};\n    --color--ramp: #{$color-ramp};\n}","@import '~styles/mixins';\n\n.title {\n  @include flex-definition(row, center, center);\n  border-bottom: 1px solid var(--color--font);\n  \n  h2 {\n    @include transition-definition(.5s);\n    @include respond-to(mobile) {\n      font-size: 1rem;\n\n      &:hover:active {\n        @include transition-definition(.5s);\n        letter-spacing: .125rem;\n      }\n    }\n\n    color: var(--color--font);\n    margin: 1rem;\n\n    &:hover {\n      @include transition-definition(.5s);\n      letter-spacing: .5rem;\n      cursor: pointer;\n    }\n  }\n}\n","@import '~styles/mixins';\n\n.container {\n  @include grid-definition(250px, 250px);\n  @include justify(center);\n  height: calc(100vh - 275px);\n  color: #fff;\n  background: transparent;\n  overflow-y: auto;\n}\n","@import '~styles/mixins';\n\n.cell {\n  @include flex-definition(column, center, center);\n  @include transition-definition(.5s);\n  height: 250px;\n  width: 250px;\n  border: 1px solid var(--color--bg);\n  background: transparent;\n  cursor: pointer;\n\n  &:hover {\n      @include transition-definition(.5s);\n      background: var(--color--primary);\n  }\n}\n","@import '~styles/mixins';\n\n.footer {\n    @include flex-definition(row, center, center);\n    @include respond-to(mobile) {\n        font-size: .6rem;\n    }\n    position: fixed;\n    width: 100%;\n    height: 3rem;\n    left: 0;\n    bottom: 0;\n    color: var(--color--font);\n    background: var(--color--bg);\n    font-size: .8rem;\n    text-align: center;\n}","@import '~styles/mixins';\n\n.hexagon {\n  cursor: pointer;\n  fill: transparent;\n  stroke: var(--color--bg);\n  stroke-width: 1;\n  transform-origin: 50% 50%;\n\n  &:hover {\n    @include animation-definition(hexagon 4s linear infinite);\n  }\n}\n\n@include keyframes-definition(hexagon) {\n  100% {\n    @include transform-definition(rotate(360deg));\n  } \n}\n","@import '~styles/mixins';\n\n.void-text {\n    color: var(--color--bg);\n    @include animation-definition(voidText 1.7s cubic-bezier(.5, 0, 1, 1) infinite alternate);\n}\n\n@include keyframes-definition(voidText) {\n    to {\n        opacity: 0;\n    }\n}\n","@import '~styles/mixins';\n\n.squares {\n\n    div {\n        height: 100px;\n        width: 100px;\n        border: 1px solid #fff;\n\n        &:hover {\n            border-color: var(--color--bg);\n        }\n\n        &:not(:last-child) {\n            margin-bottom: 2px;\n        }\n    }\n}","@import '~styles/mixins';\n\n.cube-container {\n  width: 150px;\n  height: 150px;\n  margin: 50px auto;\n  position: relative;\n  perspective: 400px;\n\n  div {\n    @include transform-style-definition(preserve-3d);      \n    width: 100%;\n    height: 100%;\n    position: absolute;\n       \n      figure {\n        @include transition-definition(.5s);\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        margin: 0;\n        border: 1px solid var(--color--bg);\n\n        &:hover:not(.right) {\n          @include transition-definition(.5s);\n          background: var(--color--secondary);\n          opacity: .9;\n        }\n      }\n      \n      .back {\n        @include transform-definition(rotateX(45deg) translateZ(-75px));\n      }\n      \n      .left {\n        @include transform-definition(rotateX(135deg) translateZ(-75px));\n      }\n      \n      .bottom {\n        @include transform-definition(rotateX(135deg) translateZ(-75px));\n      }\n      \n      .front {\n        @include transform-definition(rotateX(45deg) translateZ(75px));\n        background: var(--color--secondary);\n        opacity: .5;\n      }\n      \n      .right {\n        @include animation-definition(rightCubeFace 10s infinite);\n      }\n      \n      .top {\n        @include transform-definition(rotateX(135deg) translateZ(75px));\n      }\n    }\n}\n\n@include keyframes-definition(rightCubeFace) {\n  from {\n    @include transform-definition(rotateY(0deg) translateZ(75px));\n  }\n  \n  to {\n    @include transform-definition(rotateY(360deg) translateZ(75px));\n  }\n}\n\n","@import '~styles/mixins';\n\n.circle {\n\n    circle {\n        @include transition-definition(.25s);\n        fill: var(--color--secondary);\n\n        &:hover {\n            @include transition-definition(.5s);\n            stroke: var(--color--bg);\n            stroke-width: 1;\n            fill: transparent;\n        }\n    }\n}","@import '~styles/mixins';\n\n$count: 3;\n$duration: 1;\n\n.platforms {\n\n    span {\n        @include animation-definition(wave #{$duration}s infinite alternate);\n        display: inline-block;\n        margin: .25rem;\n    }\n}\n\n@for $i from 0 to $count {\n    .platforms :nth-child(#{$count}n + #{$i}) {\n        @include animation-delay-definition(#{($count - $i) * 2 * $duration / $count }s);\n    }\n}\n\n@include keyframes-definition(wave) {\n    from { transform : translateY(0); }\n    to   { transform : translateY(1.5rem); }\n}\n\n"]}