{"version":3,"sources":["components/Header/index.tsx","components/Dock/index.tsx","utils/getChildren.ts","components/Container/index.tsx","components/Cell/index.tsx","components/Footer/index.tsx","components/Hexagon/index.tsx","components/VoidText/index.tsx","components/Squares/index.tsx","components/Cube/index.tsx","components/Circle/index.tsx","components/Platforms/index.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["Header","react","Dock","className","getChildren","children","Array","isArray","reduce","arr","next","concat","Container","_ref","childs","map","child","index","props","type","key","Cell","Footer","Hexagon","width","height","points","VoidText","text","Squares","Cube","Circle","_React$useState","React","_React$useState2","Object","slicedToArray","radius","setRadius","interval","setInterval","prevRadius","clearInterval","cx","cy","r","Platforms","App","components_Header","components_Container","components_Cell","components_Hexagon","components_VoidText","components_Squares","components_Cube","components_Circle","components_Platforms","components_Dock","components_Footer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","src_App_0","document","getElementById","URL","process","toString","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.8988db7b.chunk.js","sourcesContent":["import * as React from \"react\";\nimport \"./style.scss\";\n\nconst Header: React.FC = () => <header></header>;\n\nexport default Header;\n","import * as React from \"react\";\nimport \"./style.scss\";\n\nconst Dock:React.FC = () => (\n  <div className=\"dock\">\n    <span>···|||||||||||||||||||···</span>\n  </div>\n);\n\nexport default Dock;\n","export const getChildren = (children: JSX.Element[][]) => {\n    if (!children) {\n        return [];\n    }\n\n    if (Array.isArray(children)) {\n        return (children as JSX.Element[][]).reduce(\n            (arr, next) => arr.concat(next),\n            [] as JSX.Element[]\n        );\n    }\n\n    return [children] as JSX.Element[];\n};","import * as React from \"react\";\nimport { getChildren } from \"../../utils/getChildren\";\nimport \"./style.scss\";\n\nconst Container:React.FC<{ children?: any }> = ({ children }) => {\n\n  const childs = getChildren(children);\n  \n  return (\n    <div className=\"container\">\n      {childs && childs.map((child, index) => {\n        if (child.props && child.props.type && child.props.type === \"tabs\") {\n          return <div\n            key={`container-tabs-${index}`}\n            className=\"container__tabs\">\n            {child}\n          </div>\n        } else {\n          return <div\n            key={`container-child-${index}`}\n            className=\"container__child\">\n            {child}\n          </div>\n        }\n      })}\n    </div>\n  );\n};\n\nexport default Container;\n","import * as React from \"react\";\nimport { getChildren } from \"../../utils/getChildren\";\nimport \"./style.scss\";\n\nconst Cell:React.FC<{ children?: any }> = ({ children }) => {\n\n  const childs = getChildren(children);\n  \n  return (\n    <div className=\"cell\">\n      {childs && childs.map(child => child)}\n    </div>\n  );\n};\n\nexport default Cell;\n","import * as React from \"react\";\nimport \"./style.scss\";\n\nconst Footer: React.FC = () => (\n  <footer className=\"footer\">\n    <span>Void is a geometric compilation</span>\n  </footer>\n);\n\nexport default Footer;\n","import * as React from \"react\";\nimport \"./style.scss\";\n\nconst Hexagon: React.FC = () => (\n    <svg width=\"150\" height=\"150\">\n        <polygon className=\"hexagon\" points=\"150,75 112.5,140 37.5,140 0,75 37.5,10 112.5,10\" />\n    </svg>\n);\n\nexport default Hexagon;\n","import * as React from \"react\";\nimport \"./style.scss\";\n\nconst VoidText: React.FC<{ text: string }> = ({ text }): any => <span className=\"void-text\">{text}</span>;\n\nexport default VoidText;\n","import * as React from \"react\";\nimport \"./style.scss\";\n\nconst Squares: React.FC = () => (\n    <div className=\"squares\">\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n);\n\nexport default Squares;\n","import * as React from \"react\";\nimport \"./style.scss\";\n\nconst Cube:React.FC = () => (\n    <div className=\"cube-container\">\n       <div>\n        <figure className=\"back\" />\n        <figure className=\"left\" />\n        <figure className=\"bottom\" />\n        <figure className=\"front\" />\n        <figure className=\"right\" />\n        <figure className=\"top\" />\n       </div>\n    </div>\n);\n\nexport default Cube;\n","import * as React from \"react\";\nimport \"./style.scss\";\n\ntype State = 10 | 20 | 30 | 40;\n\nconst Circle: React.FC = () => {\n\n    const [radius, setRadius] = React.useState<State | number>(3);\n\n    React.useEffect(() => {\n        const interval = setInterval(() => {\n            setRadius((prevRadius: number): State => {\n                if (prevRadius === 10) {\n                    return 20;\n                } else if (prevRadius === 20) {\n                    return 30;\n                } else if (prevRadius === 30) {\n                    return 40;\n                } else if (prevRadius === 40) {\n                    return 10;\n                }\n\n                return 10;\n            });\n        }, 1000);\n\n        return () => clearInterval(interval);\n    }, []);\n\n    return (\n        <div className=\"circle\">\n            <svg height=\"100\" width=\"100\">\n                <circle cx=\"50%\" cy=\"50%\" r={radius} />\n            </svg>\n        </div>\n    );\n}\n\nexport default Circle;\n","import * as React from \"react\";\nimport \"./style.scss\";\n\nconst Platforms: React.FC = () => (\n    <div className=\"platforms\">\n       <span>...................</span>\n       <span>...................</span>\n       <span>...................</span>\n    </div>\n);\n\nexport default Platforms;\n","import * as React from \"react\";\nimport \"./App.scss\";\nimport Header from \"./components/Header\";\nimport Dock from \"./components/Dock\";\nimport Container from \"./components/Container\";\nimport Cell from \"./components/Cell\";\nimport Footer from \"./components/Footer\";\nimport Hexagon from \"./components/Hexagon\";\nimport VoidText from \"./components/VoidText\";\nimport Squares from \"./components/Squares\";\nimport Cube from \"./components/Cube\";\nimport Circle from \"./components/Circle\";\nimport Platforms from \"./components/Platforms\";\n  \nconst App = () => {\n  return (\n    <>\n      <Header />\n      <Container>\n        <Cell>\n          <Hexagon />\n        </Cell>\n        <Cell>\n          <VoidText text=\"Void\" />\n        </Cell>\n        <Cell>\n          <Squares />\n        </Cell>\n        <Cell>\n          <Cube />\n        </Cell>\n        <Cell>\n          <Circle />\n        </Cell>\n        <Cell>\n          <Platforms />\n        </Cell>\n        <Cell>\n          <Dock />\n        </Cell>\n        <Cell>\n          <VoidText text=\"ENTER\" />\n        </Cell>\n      </Container>\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}